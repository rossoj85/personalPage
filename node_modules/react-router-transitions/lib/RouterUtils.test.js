'use strict';

var _chai = require('chai');

var _RouterUtils = require('./RouterUtils');

describe('RouterUtils', function () {
  describe('#getCompleteRoutesPath', function () {
    describe('with one absolute route', function () {
      it('should return path', function () {
        (0, _chai.expect)((0, _RouterUtils.getCompleteRoutesPath)([{ path: '/foo/bar' }]), 'getCompleteRoutesPath() should return route path').to.equal('/foo/bar');
      });
    });

    describe('with one relative route', function () {
      it('should return path prefixed with "/"', function () {
        (0, _chai.expect)((0, _RouterUtils.getCompleteRoutesPath)([{ path: 'foo/bar' }]), 'getCompleteRoutesPath() should return route path prefixed with "/"').to.equal('/foo/bar');
      });
    });

    describe('with several routes', function () {
      describe('absolute, relative, relative', function () {
        it('should join path with "/"', function () {
          (0, _chai.expect)((0, _RouterUtils.getCompleteRoutesPath)([{ path: '/initial/route' }, { path: 'second/route' }, { path: 'third/route' }]), 'getCompleteRoutesPath() should join path').to.equal('/initial/route/second/route/third/route');
        });
      });

      describe('absolute, relative, absolute, relative', function () {
        it('should join from the last absolute', function () {
          (0, _chai.expect)((0, _RouterUtils.getCompleteRoutesPath)([{ path: '/initial/route' }, { path: 'second/route' }, { path: '/third/route' }, { path: 'fourth/route' }]), 'getCompleteRoutesPath() should join path').to.equal('/third/route/fourth/route');
        });
      });
    });
  });

  describe('#getRoutePath', function () {
    it('should join the path to the route', function () {
      var routes = [{ path: '/initial/route' }, { path: 'second/route' }, { path: 'third/route' }, { path: 'fourth/route' }];

      var route = routes[2];

      (0, _chai.expect)((0, _RouterUtils.getRoutePath)(route, routes), 'getRouteChildPath() should join path to the route').to.equal('/initial/route/second/route/third/route');
    });
  });
});